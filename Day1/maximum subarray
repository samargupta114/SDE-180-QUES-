class Solution {
    public int maxSubArray(int[] nums) 
    {
        int max_ans=Integer.MIN_VALUE;
        int cur_sum=0;
        for(int i=0;i<nums.length;i++){
            cur_sum+=nums[i]; 
            if(cur_sum>max_ans){
                max_ans=cur_sum;
            }
            if(cur_sum<0){
                cur_sum=0;
            }
          
        }
        return max_ans;
    }
}


//tc-O(n)
//sc-o(1)
//approach - Traverse the array starting with adding the ith element with max_end_here(meh) , now we will check that adding the element gives greater value than max_so_far(msf) , if yes then we will update our msf and also update the starting and ending index 
